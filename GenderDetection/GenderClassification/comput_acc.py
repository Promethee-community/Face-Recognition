
import argparse
import os
import math

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('--input_dir', type=str,
                        default='results/',
                        help='directory of test results (default: results/')
    parser.add_argument('--input_label', type=str,
                        default='../Dataset/list_attr_celeba.txt',
                        help='wondonghyeon\'s dataset data labelization')
    args = parser.parse_args()
    input_dir = args.input_dir
    input_label=args.input_label
    gender_pose=0
    nb_file=0
    nb_ok=0

    with open(input_label) as f: 
        content = f.readlines() 
        label=content[0].strip().split(",") #list of labels
        for i in range(0,len(label)): 
          print(i,label[i])
          if label[i]=="Male":
            print (i)
            gender_pose=i #index to recover "gender" data only
        for i in range(1,len(content)):
          data=content[i].strip().split(",") 
          file_name=data[0] 
          csv_name=os.path.join(input_dir,file_name.replace(".jpg",".csv")) 
          if(os.path.exists(csv_name)):
            nb_file+=1 #nb of comparable images
            gender=data[gender_pose] #gender = -1 for women, 1 for men
         
            with open(csv_name) as f_csv: #compares test results with wondonghyeon's dataset
              content_csv = f_csv.readlines()
              label_csv=content_csv[0].strip().split(",")
              for i in range(0,len(label_csv)):
                if label_csv[i]=="Male":
                   gender_pose_csv=i #index to recover "gender" data only, on results generated by pred.py
              data_csv=content_csv[1].strip().split(",")
              gender_csv=data_csv[gender_pose_csv]
              if(((float(gender_csv)>0.5 and int(gender)<0)) or (float(gender_csv)<=0.5 and int(gender)>0)): 
                  print(file_name,csv_name,gender,gender_csv,nb_ok,round((nb_ok/nb_file)*100), "%") #shows errors
              else:
                nb_ok+=1 
        
    print("acc:", round((nb_ok/nb_file)*100)) #accuracy of the model
        #result=content[pose].strip().split(",")
if __name__ == "__main__":
    main()
        
    